extends ./layout

block head

  style(type="text/css").
    .highlight{
      background-color: yellow;
    }
    .strikethrough{
      text-decoration: line-through;
    }


  - for c in css
    link(href=c, rel="stylesheet")

  link(rel='stylesheet', href='stylesheets/render.css')
  link(rel='stylesheet', type="text/css", href="/components/prism/themes/prism.css")

  - for j in js
    script(type="text/javascript", src=j)
  
  script(type="text/javascript", src="js/serve-pie-processor.js")


  - for i in htmlImports
    link(rel="import", href=i)

  script.

    (function(root){
      var model = !{JSON.stringify(model)};
      var env = {mode : 'gather', locale: 'en_US'};
      var sessions = [];
      var servePie = {
        processor: new ServePieProcessor(!{JSON.stringify(processingEndpoints)})
      };

      pie.container = new root.pie.Container(model.components, env, sessions, servePie.processor);
      console.log('pie.container instance constructed');

      var lastString = '';

      function logSession() {
        var jsonString = JSON.stringify(sessions, null, '  ');
        if(jsonString !== lastString){
          $('code').html(jsonString);
          if(window['Prism']){
            Prism.highlightAll();
          }
          lastString = jsonString;
        }
        setTimeout(logSession, 500);
      }
      
      logSession();


    })(this);


    var initialised = false;
    
    document.addEventListener('pie.container', function(event){
      if(event.detail.type === 'modelUpdated' && !initialised){
        initialised = true;
        showPreview(true);
      }
    });

    document.addEventListener('pie.envChanged', function(event){
      var env = event.target.env;
      var contrast;
      if(env && env.accessibility && env.accessibility.colorContrast){
        contrast = env.accessibility.colorContrast;
      } 

      if(contrast === 'black_on_white'){
        $('.main').removeClass('black_on_rose');
        $('.main').removeClass('white_on_black');
      } else {
        $('.main').addClass(env.accessibility.colorContrast);
      }
    });

    function showPreview(show){
      var panel = document.querySelector('pie-control-panel');
      
      if(panel){
        panel.showSession = show;
      }

      if(show){
        $('.session-preview').removeClass('hide-session');
      } else {
        $('.session-preview').addClass('hide-session');
      }
    }

    document.addEventListener('pie.showSession', function(value) {
      var show = value.detail === true;
      showPreview(show);
    });

    showPreview(false);

block content

  - if(addAccessibilityComponents)
    corespring-highlight-behavior(target=".rendering")
    corespring-masking#masking(target=".rendering")

  pie-control-panel
    - if(addAccessibilityComponents)
      masking-button(target="#masking")
      corespring-highlight-button

  hr/
  div.main
    div.rendering
      | !{markup}
    div.session-preview
      pre 
        code.language-json
  
  script(type="text/javascript", src="/components/prism/prism.js")
  script(type="text/javascript", src="/components/prism/components/prism-json.min.js")
  script(type="text/javascript", src="/components/prism/components/prism-javascript.min.js")