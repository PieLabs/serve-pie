extends ./layout

block head

  style(type="text/css").
    .highlight{
      background-color: yellow;
    }
    .strikethrough{
      text-decoration: line-through;
    }


  - for c in css
    link(href=c, rel="stylesheet")

  link(rel='stylesheet', href='stylesheets/render.css')
  link(rel='stylesheet', type="text/css", href="/components/prism/themes/prism.css")

  - for j in js
    script(type="text/javascript", src=j)
  
  script(type="text/javascript", src="js/serve-pie-processor.js")
  script(type="text/javascript", src="js/tmp-control-panel.js")

  script.

    (function(root){
      var model = !{JSON.stringify(model)};
      var env = {mode : 'gather', locale: 'en_US'};
      var sessions = [];
      var servePie = {
        processor: new ServePieProcessor(!{JSON.stringify(processingEndpoints)})
      };

      pie.container = new root.pie.Container(model.components, env, sessions, servePie.processor);
      console.log('pie.container instance constructed');

      var lastString = '';

      function logSession() {
        var jsonString = JSON.stringify(sessions, null, '  ');
        if(jsonString !== lastString){
          $('code').html(jsonString);
          if(window['Prism']){
            Prism.highlightAll();
          }
          lastString = jsonString;
        }
        setTimeout(logSession, 500);
      }
      
      logSession();

    })(this);


    var initialised = false;
    
    document.addEventListener('pie.container', function(event){
      if(event.detail.type === 'modelUpdated' && !initialised){
        initialised = true;
      }
    });

block content

  tmp-control-panel

  hr/
  .main
    .rendering
      | !{markup}
    .tools
      .session-preview
        pre 
          code.language-json
